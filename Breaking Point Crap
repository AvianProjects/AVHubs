-- anti skidders

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==5) then v16=nil;v16=function(v20,v21,...)local v27=1;local v28;v20=v5(v4(v20,5),"..",function(v29)if (v2(v29,2)==79) then local v79=0;while true do if (v79==0) then v28=v1(v4(v29,1,1));return "";end end else local v80=0;local v81;while true do if (0==v80) then v81=v3(v1(v29,16));if v28 then local v110=0;local v111;while true do if (1==v110) then return v111;end if (0==v110) then v111=v6(v81,v28);v28=nil;v110=1;end end else return v81;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v82=(v31/(2^(v32-(2 -(1 -0)))))%((2 + 0)^(((v33-(611 -(371 + 239))) -(v32-(1 + 0))) + (1214 -(392 + 821)))) ;return v82-(v82%(1 + 0)) ;else local v83=0 -0 ;local v84;while true do if (0==v83) then v84=(1 + 1)^(v32-(2 -1)) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or (270 -(216 + (251 -197))) ;end end end end local function v34()local v47=(312 + 174) -(243 + 243) ;local v48;while true do if ((2 -1)==v47) then return v48;end if (v47==(0 -0)) then v48=v2(v20,v27,v27);v27=v27 + (3 -2) ;v47=1 + 0 ;end end end local function v35()local v49,v50=v2(v20,v27,v27 + (5 -3) );v27=v27 + (4 -2) ;return (v50 * (755 -499)) + v49 ;end local function v36()local v51=0 -0 ;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v2(v20,v27,v27 + (168 -(99 + (186 -120))) );v27=v27 + (6 -2) ;v51=1;end if (v51==(1 + 0)) then return (v55 * (25288907 -8511691)) + (v54 * ((32284 + 33747) -(68 + 427))) + (v53 * (673 -417)) + v52 ;end end end local function v37()local v56=0 -0 ;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==(0 + 0)) then v57=v36();v58=v36();v56=1 + 0 ;end if (v56==(2 -1)) then v59=181 -(111 + 69) ;v60=(v30(v58,(1 -0) + 0 ,1144 -(329 + 795) ) * ((530 -(338 + 59 + (380 -249)))^32)) + v57 ;v56=1963 -(889 + 1072) ;end if ((221 -(127 + 91))==v56) then if (v61==(658 -(74 + 245 + 339))) then if (v60==(0 -0)) then return v62 * (1242 -(199 + 1043)) ;else v61=(626 -(357 + 266)) -2 ;v59=0 + 0 ;end elseif (v61==(10059 -8012)) then return ((v60==(1016 -(614 + 402))) and (v62 * ((133 -(48 + 84))/((210 + 67) -(80 + 49 + 148))))) or (v62 * NaN) ;end return v9(v62,v61-(2430 -(473 + 934)) ) * (v59 + (v60/((853 -(773 + 78))^(76 -24)))) ;end if (v56==(438 -(209 + 227))) then v61=v30(v58,79 -58 ,92 -61 );v62=((v30(v58,(3569 -(224 + 1733)) -(814 + (1701 -935)) )==1) and  -(2 -1)) or (1314 -(544 + 769)) ;v56=(13 -5) -5 ;end end end local function v38(v39)local v63;if  not v39 then v39=v36();if (v39==(0 + 0)) then return "";end end v63=v4(v20,v27,(v27 + v39) -(1256 -(1135 + 120)) );v27=v27 + v39 ;local v64={};for v77=1640 -(729 + 910) , #v63 do v64[v77]=v3(v2(v4(v63,v77,v77)));end return v7(v64);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v65=0 -0 ;local v66;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v65==1) then local v85=0 -0 ;while true do if ((1462 -(1289 + 172))~=v85) then else v65=2;break;end if (v85==(1735 -(1016 + 719))) then v68=nil;v69=nil;v85=1;end end end if (3==v65) then v72=nil;while true do local v91=0 -0 ;while true do if (v91~=(0 -0)) then else local v112=0 + 0 ;while true do if (v112~=(1 + 0)) then else v91=2 -1 ;break;end if (v112~=(0 + 0)) then else if (v66==0) then local v123=0 + 0 ;local v124;local v125;while true do if (v123==(0 -0)) then v124=739 -(735 + 4) ;v125=nil;v123=1;end if (v123~=(1 + 0)) then else while true do if (v124~=0) then else v125=0;while true do if (v125==(545 -(406 + 138))) then v69={};v66=1 + 0 ;break;end if (v125~=(0 + 0)) then else local v200=0;while true do if (v200==(0 -0)) then local v244=0;while true do if (v244==(0 -0)) then v67={};v68={};v244=1;end if (v244==(1 + 0)) then v200=1;break;end end end if (v200==(1 -0)) then v125=1;break;end end end end break;end end break;end end end if (v66==(1 + 2)) then local v126=0;local v127;local v128;while true do if (v126==(125 -(80 + 45))) then v127=0;v128=nil;v126=2 -1 ;end if (v126~=(2 -1)) then else while true do if (v127~=0) then else v128=108 -(17 + 91) ;while true do local v140=0 + 0 ;while true do if (v140~=0) then else if (v128==0) then local v245=0 + 0 ;while true do if (v245~=1) then else v128=96 -(59 + 36) ;break;end if (v245==(0 -0)) then for v314=4 -3 ,v36() do v68[v314-(1 + 0) ]=v42();end for v316=1,v36() do v69[v316]=v36();end v245=1 + 0 ;end end end if (v128~=(1 + 0)) then else return v70;end break;end end end break;end end break;end end end v112=541 -(262 + 278) ;end end end if (v91~=1) then else if ((2 -1)~=v66) then else local v117=0 -0 ;local v118;local v119;while true do if (v117==0) then v118=0;v119=nil;v117=1 + 0 ;end if (v117==(816 -(489 + 326))) then while true do if (v118==(1980 -(989 + 991))) then v119=0 -0 ;while true do if (v119==(0 + 0)) then local v138=0 + 0 ;local v139;while true do if (v138~=(0 + 0)) then else v139=0;while true do if (v139~=(0 + 0)) then else local v246=0;while true do if ((0 -0)~=v246) then else v70={v67,v68,nil,v69};v71=v36();v246=1066 -(769 + 296) ;end if (v246~=1) then else v139=1 -0 ;break;end end end if (v139~=(1 + 0)) then else v119=1;break;end end break;end end end if (v119==(3 -2)) then v72={};v66=2;break;end end break;end end break;end end end if (v66==(433 -(318 + 113))) then local v120=11 -(5 + 6) ;local v121;while true do if ((113 -(50 + 63))==v120) then v121=0 -0 ;while true do if (v121==(588 -(448 + 139))) then for v133=1,v36() do local v134=0 -0 ;local v135;local v136;local v137;while true do if (v134~=0) then else v135=0;v136=nil;v134=1;end if (v134==1) then v137=nil;while true do if (v135~=(1225 -(1008 + 216))) then else while true do if (v136==(0 + 0)) then v137=v34();if (v30(v137,1 -0 ,437 -(151 + 285) )~=(0 + 0)) then else local v292=0 -0 ;local v293;local v294;local v295;local v296;local v297;while true do if (v292~=1) then else v295=nil;v296=nil;v292=2;end if (v292~=2) then else v297=nil;while true do if (0==v293) then v294=0 -0 ;v295=nil;v293=1 + 0 ;end if (v293~=(1 + 0)) then else local v363=0;while true do if (v363~=(1 + 0)) then else v293=9 -7 ;break;end if (v363~=(0 + 0)) then else v296=nil;v297=nil;v363=1 + 0 ;end end end if (v293~=(4 -2)) then else while true do if (v294~=(3 -2)) then else local v383=1444 -(1102 + 342) ;while true do if (v383~=(3 -2)) then else v294=158 -(138 + 18) ;break;end if (v383==(0 -0)) then v297={v35(),v35(),nil,nil};if (v295==(0 -0)) then local v404=0 -0 ;local v405;while true do if (v404==0) then v405=0 + 0 ;while true do if ((0 + 0)~=v405) then else v297[1980 -(1911 + 66) ]=v35();v297[1771 -(843 + 924) ]=v35();break;end end break;end end elseif (v295==(1 + 0)) then v297[1 + 2 ]=v36();elseif (v295==(1 + 1)) then v297[1509 -(1260 + 246) ]=v36() -((1 + 1)^16) ;elseif (v295==3) then local v412=0 + 0 ;local v413;local v414;local v415;while true do if (v412~=1) then else v415=nil;while true do if (v413==(1 + 0)) then while true do if (v414~=(652 -(234 + 418))) then else v415=0 -0 ;while true do if (v415~=(118 -(112 + 6))) then else v297[3 + 0 ]=v36() -((1 + 1)^(14 + 2)) ;v297[23 -(6 + 13) ]=v35();break;end end break;end end break;end if (v413==0) then v414=1725 -(1417 + 308) ;v415=nil;v413=2 -1 ;end end break;end if (v412~=(0 + 0)) then else v413=0 -0 ;v414=nil;v412=231 -(156 + 74) ;end end end v383=26 -(22 + 3) ;end end end if (v294~=0) then else local v384=1135 -(22 + 1113) ;while true do if (v384==(1969 -(1459 + 510))) then v295=v30(v137,1208 -(193 + 1013) ,1329 -(881 + 445) );v296=v30(v137,17 -13 ,22 -16 );v384=2 -1 ;end if (v384==(3 -2)) then v294=3 -2 ;break;end end end if (2==v294) then if (v30(v296,1,4 -3 )~=1) then else v297[819 -(289 + 528) ]=v72[v297[1 + 1 ]];end if (v30(v296,1944 -(247 + 1695) ,2)==1) then v297[1955 -(1201 + 751) ]=v72[v297[277 -(137 + 137) ]];end v294=1950 -(1575 + 372) ;end if (v294==(1638 -(693 + 942))) then if (v30(v296,2 + 1 ,9 -6 )~=1) then else v297[4 + 0 ]=v72[v297[4 + 0 ]];end v67[v133]=v297;break;end end break;end end break;end if (v292==(1247 -(1144 + 103))) then v293=0 + 0 ;v294=nil;v292=1;end end end break;end end break;end if (v135==(0 -0)) then local v241=0 -0 ;while true do if (v241~=1) then else v135=1565 -(1445 + 119) ;break;end if (v241~=(0 -0)) then else v136=0;v137=nil;v241=2 -1 ;end end end end break;end end end v66=2 + 1 ;break;end if (v121~=(695 -(252 + 443))) then else local v131=0 + 0 ;local v132;while true do if (v131==0) then v132=0 + 0 ;while true do if (v132~=(1676 -(1097 + 578))) then else v121=787 -(658 + 128) ;break;end if (v132~=0) then else local v201=0;while true do if (v201==0) then for v251=1677 -(194 + 1482) ,v71 do local v252=505 -(276 + 229) ;local v253;local v254;local v255;local v256;while true do if (v252~=(2 + 0)) then else while true do if (v253==(0 -0)) then local v357=0;while true do if (v357~=(0 + 0)) then else v254=613 -(477 + 136) ;v255=nil;v357=1 + 0 ;end if (v357==1) then v253=1816 -(953 + 862) ;break;end end end if (v253~=1) then else v256=nil;while true do if (v254~=(22 -(11 + 10))) then else if (v255==(341 -(312 + 28))) then v256=v34()~=(1448 -(480 + 968)) ;elseif (v255==2) then v256=v37();elseif (v255~=(1 + 2)) then else v256=v38();end v72[v251]=v256;break;end if (0~=v254) then else local v368=0;while true do if (v368~=1) then else v254=1 + 0 ;break;end if (v368==(925 -(165 + 760))) then v255=v34();v256=nil;v368=4 -3 ;end end end end break;end end break;end if (v252==(1720 -(1081 + 639))) then v253=0;v254=nil;v252=3 -2 ;end if (v252==(1537 -(1385 + 151))) then v255=nil;v256=nil;v252=4 -2 ;end end end v70[3]=v34();v201=2 -1 ;end if (1==v201) then v132=220 -(200 + 19) ;break;end end end end break;end end end end break;end end end break;end end end break;end if (v65~=(2 + 0)) then else local v86=0;while true do if (v86==1) then v65=7 -4 ;break;end if (v86==0) then v70=nil;v71=nil;v86=1;end end end if (v65==(1173 -(775 + 398))) then local v87=0 -0 ;while true do if (v87==0) then v66=0 + 0 ;v67=nil;v87=1865 -(1194 + 670) ;end if (v87==(1 + 0)) then v65=1 + 0 ;break;end end end end end local function v43(v44,v45,v46)local v73=0;local v74;local v75;local v76;while true do if (v73==0) then v74=v44[1];v75=v44[2];v73=1;end if (v73==1) then v76=v44[3];return function(...)local v92=1;local v93= -1;local v94={...};local v95=v13("#",...) -1 ;local function v96()local v97=v74;local v98=v75;local v99=v76;local v100=v41;local v101={};local v102={};local v103={};for v107=0 + 0 + 0 ,v95 do if (((6926 -4800)==(6615 -4489)) and (v107>=v99)) then v101[v107-v99 ]=v94[v107 + 1 + 0 ];else v103[v107]=v94[v107 + 1 ];end end local v104=(v95-v99) + (1541 -(1313 + 227)) ;local v105;local v106;while true do local v108=0 -(0 -0) ;while true do if ((v108==(1 + 0)) or ((2147 -(1140 + 212))>(2675 -(406 + 194 + 15)))) then if (((155 + 637)<3615) and (v106<=(75 -58))) then if (((3549 -(493 + 37 + 1469))>1189) and (v106<=8)) then if (((1099 -789)==(196 + 114)) and (v106<=(944 -(437 + 504)))) then if ((v106<=1) or ((4800 -(94 + 798))<(1095 -813))) then if (((1520 -(304 + 567))<(2735 -471)) and (v106>0)) then local v141=1000 -(201 + 799) ;local v142;local v143;local v144;while true do if (((172 + 631 + 1513)<=((4018 + 8829) -8282)) and (v141==(1 + 0))) then v144=nil;while true do if (((3208 + (3289 -2388))>3126) and ((595 -(354 + 240))==v142)) then v103[v143 + 1 + 0 ]=v144;v103[v143]=v144[v105[1 + 3 ]];break;end if (((0 -0)==v142) or (238>(2385 -(956 + 869)))) then local v260=0 + 0 ;while true do if ((v260==(3 -(3 -1))) or ((6043 -(1654 + 66 + 185))==(4378 -(90 + 175)))) then v142=1 -0 ;break;end if ((v260==0) or (2750<(3477 -(1512 + (1255 -(423 + 351)))))) then v143=v105[(532 -(137 + 386)) -7 ];v144=v103[v105[3]];v260=1 + 0 ;end end end end break;end if (((3309 -(196 + 138))<(157 + 103 + 3880)) and (v141==(0 -0))) then v142=0 -0 ;v143=nil;v141=886 -(60 + 1 + 824) ;end end else v103[v105[8 -6 ]]=v103[v105[(1 + 5) -3 ]];end elseif ((368<=(4870 -(612 + 1346))) and (v106>(260 -(15 + 6 + 237)))) then v103[v105[2 + 0 ]]={};else local v148=0 -0 ;local v149;while true do if ((v148==0) or ((327 + (3492 -2760))==562)) then v149=v105[2 -0 ];v103[v149](v103[v149 + 1 ]);break;end end end elseif ((3601>((12031 -7318) -(2723 -(265 + 75)))) and (v106<=(16 -(11 + 0)))) then if ((v106>((1866 -(902 + 949)) -11)) or (((926 + 1223) -(21 + 498))==2503)) then v103[v105[7 -5 ]]=v105[5 -2 ]~=((665 -(211 + 454)) -0) ;elseif (((1831 + 91)<4787) and  not v103[v105[2 + 0 ]]) then v92=v92 + 1 + 0 + 0 ;else v92=v105[1510 -((577 -253) + (2164 -981)) ];end elseif ((v106<=6) or ((533 + 2053)==(102 + 2657))) then v103[v105[2]]=v103[v105[1 + 2 ]] * v103[v105[2 + 2 ]] ;elseif (((3835 + 686)>=(3735 -(63 + 192 + 12))) and (v106==((5 -1) + 3))) then do return;end else v46[v105[469 -(453 + 13) ]]=v103[v105[2]];end elseif ((v106<=(5 + (10 -3))) or (734>4266)) then if ((v106<=(18 -8)) or ((47 + 3 + 18)>(1202 + 256))) then if ((v106>(634 -(107 + 518))) or ((306 + 1451)<=(1030 + 135))) then v103[v105[245 -(231 + 12) ]]();elseif ((((5793 -3175) -1185)==(393 + 1040)) and (v103[v105[1 + 1 ]]==v105[(774 -(374 + 397)) + 1 ])) then v92=v92 + 1 ;else v92=v105[3];end elseif ((3726>=(980 -(565 + 139))) and (v106>(3 + (176 -(81 + 87))))) then v103[v105[688 -((1326 -941) + 301) ]]=v105[6 -3 ];else v92=v105[3 + 0 ];end elseif (((4271 -(990 + 890))<=(10395 -7949)) and (v106<=14)) then if (((14134 -9740)>(3118 -(164 + 10))) and (v106>(362 -(25 + 324)))) then local v155=0 -0 ;local v156;local v157;local v158;local v159;while true do if ((v155==0) or ((1581 -(824 + 97))>=(637 + 98 + 2260))) then v156=898 -(118 + 780) ;v157=nil;v155=1295 -(997 + 297) ;end if (((3165 -(60 + 38 + 423))<=(4994 -(1286 + 643))) and ((1146 -(945 + 199))==v155)) then while true do if ((v156==1) or (459==(3887 -(653 + 649)))) then v159={};v158=v11({},{__index=function(v261,v262)local v273=965 -(372 + 593) ;local v274;while true do if (((947 + 1476)>(1660 -(55 + 101))) and (v273==(0 -0))) then local v337=0;while true do if ((v337==(0 + 0)) or ((1928 -(886 + 17 + 126))<(2076 -1335))) then v274=v159[v262];return v274[1 + 0 ][v274[91 -(15 + 74) ]];end end end end end,__newindex=function(v261,v262,v263)local v275=1749 -(540 + 1209) ;local v276;local v277;local v278;while true do if (((137 + 795)<1967) and (((267 + 168) -(277 + 158))==v275)) then v276=0;v277=nil;v275=1;end if (((25 -7)<=((6404 -(237 + 8)) -1829)) and (v275==(1 + 0))) then v278=nil;while true do if ((v276==(0 -0)) or ((457 + 294 + 1962)<(176 + 786))) then local v361=1830 -(77 + 718 + 1035) ;while true do if ((((2436 -(880 + 41)) + (2374 -(330 + 225)))<(10595 -6901)) and (v361==(617 -((715 -(210 + 304)) + 416)))) then v277=0 + 0 ;v278=nil;v361=1 + 0 ;end if ((v361==(208 -((1076 -(67 + 913)) + 18 + 93))) or ((1118 + 3337)<=(313 + 1043))) then v276=1833 -((1902 -(430 + 908)) + 1268) ;break;end end end if (((4739 -2111)>=(1904 -(83 + 1052))) and (v276==(869 -(664 + 204)))) then while true do if ((v277==(0 + 0)) or ((474 -(47 + 67 + 23))>=(3332 -(1487 + 201)))) then v278=v159[v262];v278[1 + 0 ][v278[182 -(52 + 128) ]]=v263;break;end end break;end end break;end end end});v156=2;end if ((v156==2) or ((1272 + 997)<=1734)) then for v279=3 -2 ,v105[4 + 0 ] do local v280=0;local v281;local v282;local v283;while true do if (((1534 + 1375 + 1803)==(4208 + 504)) and (v280==0)) then v281=0 + 0 + 0 ;v282=nil;v280=1 + 0 ;end if ((v280==(1 -0)) or ((1362 -(52 + (245 -106)))>(3031 -(366 + 364)))) then v283=nil;while true do if (((1203 + 456)<=(1730 + 642)) and (v281==(1 -0))) then while true do if ((((3350 -(91 + 1467)) -(297 + 12))<=(5678 -(1022 + (49 -25)))) and (v282==1)) then if (((5206 -(20 + 44 + 1186 + 571))<(7473 -3929)) and (v283[1 -0 ]==0)) then v159[v279-(1 + 0) ]={v103,v283[3]};else v159[v279-(204 -(17 + 13 + 173)) ]={v45,v283[(2615 -(1118 + 854)) -(46 + 594) ]};end v102[ #v102 + ((11 -8) -2) ]=v159;break;end if ((v282==0) or ((17499 -13034)<=(3633 -(536 + 259)))) then local v374=(3671 -2715) -(823 + (381 -248)) ;local v375;while true do if (((886 + 1088 + 602)>=(238 + 1240)) and (v374==((0 -0) + (1551 -(207 + 1344))))) then v375=1228 -(664 + (1826 -(27 + 1235))) ;while true do if ((((4292 + 1551) -(965 + 609))==(6206 -1937)) and (v375==(1331 -(198 + 1133)))) then local v406=454 -(20 + 434) ;while true do if ((((4426 -(361 + 585)) -2126)==1354) and (v406==(4 -3))) then v375=1;break;end if (((2347 -((2197 -(1821 + 120)) + 220))<(4088 -(795 + 648))) and (v406==0)) then v92=v92 + 1 ;v283=v97[v92];v406=(2 -1) + 0 ;end end end if ((1==v375) or (((1272 + 499) -944)==(3727 -(1342 + (625 -(20 + 24)))))) then v282=1;break;end end break;end end end end break;end if (((2095 -1038)==1057) and (v281==(0 -0))) then local v362=0 + 0 ;while true do if (((5066 -(140 + 1200))>2125) and (v362==(1521 -(318 + 987 + 215)))) then v281=1 + 0 ;break;end if (((317 -215)<4788) and (v362==(1781 -((4487 -2772) + 66)))) then v282=0;v283=nil;v362=4 -3 ;end end end end break;end end end v103[v105[2 + 0 ]]=v43(v157,v158,v46);break;end if ((v156==(1173 -(307 + 866))) or ((847 + 2616)<(2632 + 292))) then local v265=0 -(0 -0) ;while true do if (((9981 -(14397 -8601))==(1657 + 2528)) and (v265==(0 + 0))) then v157=v98[v105[3]];v158=nil;v265=(3 -2) + (0 -0) ;end if ((v265==(3 -2)) or (4342<=(3762 -2213))) then v156=1 + 0 ;break;end end end end break;end if ((v155==(1 -0)) or (3307<=(7868 -(6277 -(374 + 776))))) then v158=nil;v159=nil;v155=1 + 1 ;end end else local v160=0 + 0 + 0 ;local v161;local v162;local v163;while true do if ((v160==(989 -(909 + 79))) or ((17011 -12740)==(2927 -(808 + 370)))) then v163=nil;while true do if ((v161==(3 -2)) or ((8672 -6892)>(369 + 3546))) then for v284=v162 + (697 -((48 -28) + 676)) ,v105[3 + 1 ] do v163=v163   .. v103[v284] ;end v103[v105[(507 + 445) -(526 + 424) ]]=v163;break;end if ((4585>=(7308 -5762)) and (v161==0)) then local v267=0;while true do if ((v267==(997 -(531 + 465))) or ((1015 + 935)>=4286)) then v161=(118 -(26 + 88)) -3 ;break;end if ((((2804 -(1124 + 447)) -493)<=(5956 -3394)) and (v267==(0 + 0))) then v162=v105[8 -5 ];v163=v103[v162];v267=1;end end end end break;end if (((0 + 0)==v160) or ((5162 -(592 + 226))<=((2473 -(1173 + 492)) + 224))) then v161=613 -(96 + 517) ;v162=nil;v160=2 -1 ;end end end elseif (((1549 + 1058 + 1417)==(4360 -(105 + 231))) and (v106<=15)) then local v164=0 -0 ;local v165;local v166;local v167;local v168;local v169;local v170;while true do if (((2932 -1303)<=(10954 -6530)) and (v164==1)) then v167=nil;v168=nil;v164=86 -(35 + 49) ;end if ((v164==0) or ((2288 + 250)<(1767 + 240 + 51))) then v165=0;v166=nil;v164=(1364 -(1128 + 235)) + 0 ;end if ((((5032 -922) -(82 + 281 + 74))<=(5696 -(1328 + 313))) and (v164==2)) then v169=nil;v170=nil;v164=3;end if (((2075 -(658 + 498))==((886 -254) + 287)) and (v164==(11 -8))) then while true do if (((1184 -((1823 -(1756 + 44)) + 37))<1672) and (v165==(995 -(33 + 960)))) then v170=nil;while true do if ((v166==(2 + 0)) or ((838 + 2275)<2942)) then for v338=v167,v93 do local v339=0 + 0 ;local v340;while true do if (((3125 + 542 + 186)<((5497 + 568) -(435 + 795))) and (v339==0)) then v340=0;while true do if (((1681 -(1358 + 323))==v340) or (1343>(3738 -(989 + 555)))) then v170=v170 + (2 -1) ;v103[v338]=v168[v170];break;end end break;end end end break;end if ((v166==1) or ((1488 -(167 + (1502 -(61 + 1294))))<953)) then local v323=1112 -(77 + 1035) ;while true do if (((5595 -4164)<=(4684 -(5779 -2671))) and (v323==(0 + (0 -0)))) then v93=(v169 + v167) -(1452 -((1284 -1004) + 1158 + 13)) ;v170=0 -0 ;v323=4 -3 ;end if ((v323==(1 + 0)) or ((1900 -(217 + 347))>((13115 -7582) -3002))) then v166=1705 -(149 + 1554) ;break;end end end if (((4055 -(1070 + 899))<=(4036 -(563 + 416))) and (0==v166)) then local v324=0;local v325;while true do if ((v324==0) or ((8564 -5441)<(7568 -4783))) then v325=0 -(0 + 0) ;while true do if ((2195>=(3378 -2371)) and (v325==1)) then v166=1;break;end if ((((1201 -(1020 + 181)) + 0)==v325) or (3784<(5382 -2102))) then local v369=0 + 0 ;while true do if (((680 + 2339)<=(10215 -6699)) and (v369==(0 -0))) then v167=v105[1 + 1 ];v168,v169=v100(v103[v167](v14(v103,v167 + 1 + 0 ,v105[14 -11 ])));v369=3 -2 ;end if ((2024<=(4141 -1505)) and (v369==1)) then v325=1;break;end end end end break;end end end end break;end if (((6296 -(777 + (4189 -3031)))>=(13637 -10656)) and (v165==(3 -2))) then local v268=0;while true do if (((3393 -(921 + 562))==(7585 -5675)) and (v268==(1 + 0))) then v165=2;break;end if ((v268==(0 -0)) or ((63 + 194 + 4402)<=((14360 -(313 + 663)) -10562))) then v168=nil;v169=nil;v268=35 -((16 -3) + 21) ;end end end if (((1417 -(5 + 637 + 330))<=2333) and (v165==(0 -0))) then v166=1603 -(1018 + 585) ;v167=nil;v165=483 -(122 + 360) ;end end break;end end elseif ((v106>(4 + 7 + 5)) or ((998 + 241)>=(267 + 2455))) then local v206=(254 + 103) -(7 + 350) ;local v207;local v208;while true do if (((7395 -2740)>=4151) and (v206==(0 -0))) then v207=0 + 0 ;v208=nil;v206=2 -1 ;end if ((v206==(1 -0)) or ((617 + 773)==(7812 -3346))) then while true do if (((2575 -(299 + (754 -525)))<(3967 -((1194 -781) + 451))) and (v207==(0 -0))) then v208=v105[1750 -(605 + 1143) ];v103[v208](v14(v103,v208 + (2 -1) ,v105[6 -3 ]));break;end end break;end end else local v209=0 + 0 ;local v210;local v211;while true do if (((3226 + 10)>(6897 -3974)) and (v209==(1 + 0))) then while true do if ((v210==(0 + 0)) or ((1798 -(343 + 133 + 314))>(6534 -2363))) then v211=v105[2];v103[v211]=v103[v211]();break;end end break;end if ((2098<((3127 + 6524) -7324)) and (v209==(0 + 0))) then v210=0 + 0 ;v211=nil;v209=2 -(1888 -(1452 + 435)) ;end end end elseif (((823 + 657)>=(1602 -(624 + (2301 -1639)))) and (v106<=(463 -(115 + 322)))) then if ((v106<=(5 + 16)) or ((15853 -10934)<1084)) then if ((v106<=19) or ((4139 -(552 + 1273))==(1426 + 1965))) then if ((v106==(1211 -(34 + (2376 -(120 + 1097))))) or ((5846 -3970)>=(8394 -5944))) then v103[v105[(102 -(15 + 85)) + 0 ]][v105[3]]=v105[10 -6 ];else local v173=0;local v174;local v175;local v176;local v177;local v178;local v179;while true do if (((332 + 3037)>(85 + 1345)) and (v173==(197 -(92 + 103)))) then v178=nil;v179=nil;v173=(1330 -(477 + 851)) + 1 ;end if ((v173==(1949 -(1547 + 401))) or ((675 + 1093)>=((7805 -(282 + 10)) -3823))) then v176=nil;v177=nil;v173=372 -(103 + 267) ;end if (((16118 -11453)>=(3888 -(12 + 32))) and (v173==(14 -11))) then while true do if ((1247<2772) and (v174==(1113 -(248 + (1898 -(976 + 57)))))) then local v269=0;while true do if ((2273<=(3663 -(304 + 375))) and (v269==(0 + 0))) then v175=0;v176=nil;v269=3 -2 ;end if (((5783 -(1201 + 540))>(999 -497)) and ((2 -1)==v269)) then v174=1;break;end end end if ((4726<4875) and (v174==(1 + 1 + 0))) then v179=nil;while true do if ((1==v175) or ((1627 + 1498)>3667)) then local v326=0;local v327;while true do if ((v326==(0 -0)) or (642>((312 + 3999) -(275 + 25)))) then v327=0 + 0 ;while true do if ((1==v327) or ((5146 -(1500 + 241))<=(3213 -(544 + 1106)))) then v175=(2728 -1726) -(232 + 768) ;break;end if (((0 + 0)==v327) or ((7518 -3914)<=(669 + 721))) then v93=(v178 + v176) -(3 -2) ;v179=0;v327=1512 -(383 + 1128) ;end end break;end end end if ((v175==(0 -0)) or (3405<(2595 -(519 + 1030)))) then local v328=0 + 0 ;while true do if (((20154 -15902)>(269 + 95)) and (v328==(65 -(10 + 55)))) then v176=v105[5 -3 ];v177,v178=v100(v103[v176]());v328=688 -(191 + 496) ;end if ((((1787 -(11 + 18)) + 3057)<4926) and (v328==(1 + 0 + 0))) then v175=(1348 -(642 + 705)) + 0 ;break;end end end if (((12 + 54 + 1257)<=(2042 + 235)) and (v175==(1296 -(338 + 956)))) then for v341=v176,v93 do local v342=0;local v343;local v344;while true do if ((((14076 -(144 + 72)) -10164)>3549) and (v342==(2 -1))) then while true do if (((4499 -(331 + 37))>=(10666 -6615)) and (v343==(0 -0))) then v344=0 + 0 ;while true do if ((v344==(0 + 0)) or ((3325 + (1082 -(28 + 178)))<2383)) then v179=v179 + (1 -0) ;v103[v341]=v177[v179];break;end end break;end end break;end if ((v342==(23 -(16 + 7))) or ((197 + 277)>3465)) then v343=0 -0 ;v344=nil;v342=4 -(1767 -(1281 + 483)) ;end end end break;end end break;end if ((((5235 -2260) -1615)==1360) and (v174==(992 -(623 + 368)))) then v177=nil;v178=nil;v174=2 + 0 ;end end break;end if (((8333 -3408)==(5043 -(38 + 80))) and (v173==((749 + 652) -(396 + 1005)))) then v174=0 + 0 ;v175=nil;v173=1618 -(453 + 1164) ;end end end elseif ((1268>(587 + 285)) and (v106>(82 -62))) then v103[v105[2]]=v46[v105[10 -7 ]];else local v182=0;local v183;local v184;local v185;local v186;while true do if ((v182==(1 + 1)) or ((13612 -10157)<=(2062 -(242 + 34)))) then while true do if (((1425 -(14 + 127 + 372 + 911))==v183) or (1791>=(22 + 3424))) then v186=0 + 0 ;for v285=v184,v105[4] do local v286=0 + 0 ;local v287;local v288;while true do if ((v286==0) or ((1509 -(105 + 152))>=((4286 + 779) -(5090 -3188)))) then v287=1123 -(947 + 176) ;v288=nil;v286=1;end if ((v286==(1 + 0)) or ((2110 -(159 + 791))>=(8781 -5807))) then while true do if (((4490 -2764)==(6394 -4668)) and (v287==(0 + 0))) then v288=(0 + 0) -0 ;while true do if (((5214 -(181 + 693))==(4385 -(11 + 34))) and (v288==(0 -0))) then v186=v186 + 1 + 0 ;v103[v285]=v185[v186];break;end end break;end end break;end end end break;end if ((((11841 -7529) + 30)>(2316 + 1723)) and ((0 + 0)==v183)) then local v270=0;local v271;while true do if ((v270==((0 + 0) -0)) or ((2695 -((2434 -(1699 + 162)) + 847))>(3697 -(247 + 73 + 105)))) then v271=0 -(0 + 0) ;while true do if ((v271==(0 -0)) or ((1581 + 142)==(1218 -(250 + 908)))) then local v359=(1888 -(707 + 417)) -(754 + 10) ;while true do if (((4 -3)==v359) or ((3399 -(9578 -7057))<534)) then v271=(1980 -(1280 + 699)) + 0 + 0 ;break;end if ((v359==(906 -(479 + (1105 -678)))) or ((4399 -2860)>2545)) then v184=v105[4 -(1 + 1) ];v185={v103[v184](v14(v103,v184 + ((84 -(11 + 71)) -1) ,v93))};v359=1;end end end if ((v271==1) or ((5007 -(146 + 73))==(2225 -(600 + 835)))) then v183=1 -0 ;break;end end break;end end end end break;end if (((1981 -1506)<=(3652 -1766)) and (v182==((1660 -(600 + 379)) -(123 + 557)))) then local v243=0;while true do if ((1==v243) or ((112 + 196)>=3236)) then v182=77 -(74 + 1) ;break;end if ((v243==0) or ((11538 -7545)<(227 + 3459))) then v185=nil;v186=nil;v243=1751 -(743 + 1007) ;end end end if (((3362 + 1043)>(3091 -(839 + 825))) and (0==v182)) then v183=0 -(0 + 0) ;v184=nil;v182=1;end end end elseif (((3336 -((2092 -926) + 89))<3340) and (v106<=23)) then if ((v106==(11 + 11)) or ((369 + 261)<(463 -210))) then local v187=0 + 0 ;local v188;local v189;local v190;while true do if (((220 + 1594)<3397) and (v187==(1 + 0))) then v190=nil;while true do if ((v188==(2 -1)) or ((3958 -(53 + 41))==(2300 + 1450))) then for v289=1264 -(1211 + 52) , #v102 do local v290=0 + 0 ;local v291;while true do if ((v290==(0 -0)) or ((533 + 1352)<=(321 + 166))) then v291=v102[v289];for v348=0, #v291 do local v349=0 + 0 ;local v350;local v351;local v352;while true do if ((v349==((2 -1) + 0)) or ((4673 -(51 + 1310))<=((3895 -(1406 + 280)) -(288 + 226)))) then v352=v350[2 -0 ];if (((v351==v103) and (v352>=v189)) or ((20 + 8)>(1828 -(769 + 860)))) then local v380=0 -0 ;while true do if (((584 + 2710)<=(9694 -5607)) and (v380==((681 -(189 + 492)) -0))) then v190[v352]=v351[v352];v350[(630 -(320 + 307)) -2 ]=v190;break;end end end break;end if ((v349==(0 -0)) or ((3653 -2318)>3330)) then local v365=0;while true do if ((4225>((748 -(81 + 520)) + 2290)) and (v365==1)) then v349=3 -2 ;break;end if ((v365==(0 -0)) or ((11885 -(10049 -(960 + 498)))<=528)) then v350=v291[v348];v351=v350[1 + 0 ];v365=1 + 0 ;end end end end end break;end end end break;end if ((v188==(1375 -(1269 + 106))) or ((441 + 1183 + 2226)<(897 -335))) then local v272=385 -(94 + 291) ;while true do if ((v272==1) or ((3537 -(130 + 577))==3553)) then v188=2 -(1910 -(1149 + 760)) ;break;end if ((1339<=(7366 -5146)) and (v272==(0 -0))) then v189=v105[334 -(233 + 99) ];v190={};v272=2 -(1968 -(1386 + 581)) ;end end end end break;end if (((1855 + 531)<=3992) and (v187==(0 -0))) then v188=0 + 0 ;v189=nil;v187=1 + 0 ;end end elseif (((7741 -5619)>(2367 -(2536 -(1051 + 288)))) and (v105[2 + 0 ]<v103[v105[4]])) then v92=v92 + 1 ;else v92=v105[3];end elseif (((1052 + 97)==(617 + 532)) and (v106<=24)) then for v198=v105[1 + 1 ],v105[3 + (0 -0) ] do v103[v198]=nil;end elseif ((1870==1870) and (v106==(1231 -(364 + 842)))) then local v213=0 + 0 ;local v214;local v215;while true do if (((1502 + (868 -(78 + 693)))<(4527 -(444 + 1098))) and ((0 -0)==v213)) then local v248=0;while true do if (((5677 -4458)<=((6737 -5332) + 722)) and (v248==1)) then v213=1;break;end if (((3089 -(828 + 367))<=((17920 -(862 + 673)) -11524)) and (v248==((1596 -(356 + 1240)) -0))) then v214=0;v215=nil;v248=1 + 0 ;end end end if ((v213==1) or ((5309 -(369 + 1301))==((3834 -(321 + 538)) + 669))) then while true do if ((3317>=((2055 -(270 + 272)) -(84 + 629))) and (v214==(0 -(0 -0)))) then v215=v105[2 + 0 ];v103[v215](v14(v103,v215 + 1 + 0 ,v93));break;end end break;end end else local v216=0 -0 ;local v217;local v218;local v219;local v220;local v221;local v222;while true do if ((1460<=3563) and (v216==(3 + 0))) then while true do if (((5796 -(1028 + 61))>(2249 + 1472)) and (v217==(1 + 0))) then local v302=0 + 0 ;while true do if ((v302==(1 -(0 -0))) or ((1158 -(781 + 220))==((1272 -(850 + 129)) + 32))) then v217=1636 -(1277 + 357) ;break;end if ((v302==(0 + 0)) or ((4461 -1577)<=(4290 -(882 + 844)))) then v220=v218 + 2 ;v221={v103[v218](v103[v218 + (1509 -((3712 -2357) + 55 + 98)) ],v103[v220])};v302=1 + (1828 -(1271 + 557)) ;end end end if ((v217==(1307 -(1274 + 30))) or ((4465 -2806)>(3815 -(1651 + 109)))) then if (((1956 + 868)<=(5115 -(1622 + (168 -(32 + 48))))) and v222) then local v346=0;local v347;while true do if ((v346==0) or ((2681 + 232)>(8425 -5407))) then v347=0;while true do if (((0 + 0)==v347) or (1786<=(2644 -1288))) then v103[v220]=v222;v92=v105[(10 -7) -0 ];break;end end break;end end else v92=v92 + 1 ;end break;end if ((v217==(0 -0)) or ((2648 + 981)>=(1068 + 2851))) then local v303=524 -(443 + 81) ;while true do if (((4898 -(128 + (99 -55)))>(7832 -4610)) and (v303==0)) then v218=v105[176 -(89 + 85) ];v219=v105[4];v303=1 + 0 ;end if ((v303==(945 -(900 + 44))) or (((4865 -2710) + (3395 -2219))<=(4574 -(753 + 969)))) then v217=1;break;end end end if (((1453 + 1879)>=756) and (v217==(795 -((796 -503) + 500)))) then for v330=111 -(64 + 46) ,v219 do v103[v220 + v330 ]=v221[v330];end v222=v221[2 -1 ];v217=1 + 2 ;end end break;end if ((3615>(4782 -(450 + 927))) and (v216==(1641 -(491 + 1148)))) then v221=nil;v222=nil;v216=10 -7 ;end if ((0==v216) or ((6262 -2648)==(4136 + 702))) then v217=1793 -(1448 + 345) ;v218=nil;v216=1;end if ((v216==(1717 -(1365 + 351))) or ((2213 + (2360 -834))==(5015 -(29 + 7)))) then v219=nil;v220=nil;v216=135 -(111 + 22) ;end end end elseif (((5250 -(1746 + 50))<=(4104 -(468 + 48))) and (v106<=31)) then if ((v106<=((1420 -(549 + 159)) -(129 + 555))) or ((2797 + 715)>4742)) then if ((v106==((3 + 73) -49)) or ((136 -(72 + 5))>2297)) then if (((1840 + 165)<=(5821 -3627)) and (v105[(1142 -(92 + 452)) -(407 + 189) ]==v103[v105[1 + 3 ]])) then v92=v92 + 1 + 0 ;else v92=v105[8 -5 ];end else v103[v105[290 -(97 + 141 + 50) ]][v105[3]]=v103[v105[3 + 1 ]];end elseif ((v106<=(17 + 12)) or ((9313 -6803)>(3403 -(155 + 666)))) then v103[v105[2]]=v103[v105[1 + 2 ]][v105[667 -(152 + (1712 -(281 + 920))) ]];elseif ((v106>((542 -(334 + 131)) -47)) or ((1512 + 103)>=(6365 -(5121 -(1538 + 231))))) then local v224=0 + 0 ;local v225;local v226;local v227;local v228;local v229;while true do if ((v224==2) or ((1452 + 1338)>=3604)) then v229=nil;while true do if (((166 -(114 + 50))==v225) or ((333 + 1896)>(3825 + (876 -(192 + 252))))) then for v333=v226,v93 do local v334=0;local v335;local v336;while true do if ((v334==(0 + 0)) or ((411 + 1986)<(2643 -(1372 + (1315 -(315 + 424)))))) then v335=0 -0 ;v336=nil;v334=1425 -(123 + (5675 -4374)) ;end if ((v334==(1928 -(1726 + 201))) or ((1295 -930)>(7627 -5571))) then while true do if (((177 + 208)<(235 + 515)) and ((0 + 0)==v335)) then v336=879 -(439 + (1745 -1305)) ;while true do if (((0 -0)==v336) or ((1968 -(327 + 176))>(2799 -(864 + 84)))) then v229=v229 + ((1793 -(74 + 681)) -(69 + 214 + 754)) ;v103[v333]=v227[v229];break;end end break;end end break;end end end break;end if (((0 -0)==v225) or (((7014 -3419) -(1031 + 666))>=4791)) then local v305=1487 -(555 + 932) ;local v306;while true do if ((v305==0) or (4197<(634 + 176))) then v306=734 -(693 + 41) ;while true do if (((4298 -(1445 + 274))==((6193 -(299 + 77)) -(15144 -11906))) and (v306==(0 + 0))) then v226=v105[2];v227,v228=v100(v103[v226](v103[v226 + 1 + 0 ]));v306=1 + 0 ;end if ((v306==(307 -(16 + 96 + 194))) or (2374<=(20 + 15))) then v225=(1332 + 6) -(31 + 1306) ;break;end end break;end end end if (((2180 -(1169 + 366 + 248))==(96 + 301)) and (v225==(1 -(0 + 0)))) then local v307=0 + 0 ;local v308;while true do if (((813 + 2570)>=2593) and (v307==0)) then v308=0 + 0 ;while true do if (((5193 -(52 + 458))>(15217 -10899)) and (v308==((6 -4) -1))) then v225=2;break;end if (((549 -(251 + 289))<2277) and (v308==0)) then v93=(v228 + v226) -(1880 -(1075 + 804)) ;v229=0 -0 ;v308=1;end end break;end end end end break;end if (((1 -0)==v224) or ((4596 -(535 + 287))<=(4240 -1215))) then v227=nil;v228=nil;v224=1783 -(1756 + 25) ;end if (((4203 -(5 + 46 + 11))>3240) and (v224==(0 + (0 -0)))) then local v249=1439 -(8 + 22 + 1409) ;while true do if ((v249==(0 -0)) or ((1304 -(134 + 148))==(3790 -1581))) then v225=0 -0 ;v226=nil;v249=1 + 0 ;end if ((v249==1) or ((1518 + 2593)>=(13144 -8769))) then v224=1099 -(338 + 760) ;break;end end end end else local v230=0 + 0 ;local v231;local v232;while true do if ((v230==(1212 -(862 + 349))) or ((10954 -7803)<=2162)) then while true do if ((v231==((137 + 760) -(203 + (2045 -1351)))) or (((7773 -3346) -1296)==(39 + 1140))) then v232=v105[8 -6 ];v103[v232]=v103[v232](v14(v103,v232 + 1 ,v93));break;end end break;end if ((v230==0) or ((1920 + 883)>=3183)) then v231=0 -(489 -(179 + 310)) ;v232=nil;v230=134 -(49 + (493 -(108 + 301))) ;end end end elseif (((4190 -(600 + 600))==(1843 + 1147)) and (v106<=(51 -18))) then if (((1301 -998)==(666 -363)) and (v106==32)) then if (((354 + 619)>=(246 + 83 + (928 -503))) and v103[v105[5 -(3 -0) ]]) then v92=v92 + (2 -(1 + 0)) ;else v92=v105[1925 -(179 + 1743) ];end else v103[v105[1 + 1 ]]=v45[v105[3 + 0 ]];end elseif ((v106<=(44 -10)) or ((3619 + 1281)==(6652 -(718 + 1007)))) then v103[v105[2 + 0 ]]=v43(v98[v105[3]],nil,v46);elseif ((v106==(83 -48)) or ((2527 + 1537)<=(3324 -(554 + 220)))) then local v234=0;local v235;local v236;local v237;while true do if ((2500<(2536 + 631)) and (v234==(541 -(379 + 161)))) then v237=nil;while true do if ((v235==(0 + 0)) or (4029<=3347)) then local v311=1805 -(1405 + 400) ;while true do if (((9157 -5855)==(4352 -(923 + 127))) and (v311==(0 + 0))) then v236=0 -(0 -0) ;v237=nil;v311=1160 -(316 + 843) ;end if ((v311==(2 -1)) or ((6860 -3105)>=(4303 + 131))) then v235=1706 -(782 + 923) ;break;end end end if ((2659<3061) and (v235==(1684 -(1197 + 486)))) then while true do if (((1781 -1125)<=(2784 + 259)) and (v236==(0 -0))) then v237=v105[1605 -(795 + 808) ];v103[v237]=v103[v237](v14(v103,v237 + (1965 -(1018 + 946)) ,v105[3 + 0 ]));break;end end break;end end break;end if (((6 + 21)<(2274 -((985 -(178 + 20)) + 153))) and (v234==0)) then v235=0 + 0 ;v236=nil;v234=985 -(76 + (2228 -(253 + 1067))) ;end end else local v238=0;local v239;local v240;while true do if (((2063 -(20 + 53))==(3053 -(203 + 860))) and (v238==((207 + 1508) -(1091 + 624)))) then local v250=0 -(1017 -(723 + 294)) ;while true do if (((5731 -(164 + 706))>=(16492 -12361)) and (v250==(0 -0))) then v239=775 -(47 + 728) ;v240=nil;v250=127 -(96 + 30) ;end if ((3121>(2938 -(15 + 33))) and (v250==(1 + (0 -0)))) then v238=1 + 0 ;break;end end end if ((v238==(1 + 0)) or ((2879 -(577 + 224))==2745)) then while true do if (((11698 -7444)>(6029 -2703)) and (v239==(0 + 0))) then v240=v105[8 -6 ];v103[v240]=v103[v240](v103[v240 + 1 + 0 ]);break;end end break;end end end v92=v92 + (2 -1) ;break;end if (((644 -(4 + 2 + 44))<(2749 -1976)) and (v108==(0 -0))) then local v122=0 -0 ;while true do if ((4666==(1246 + 3420)) and (v122==((1327 -(340 + 987)) + 0))) then v105=v97[v92];v106=v105[1 -0 ];v122=595 -(288 + 306) ;end if ((v122==(255 -(96 + 158))) or (3591<=(4900 -(481 + 1197)))) then v108=1;break;end end end end end end A,B=v41(v12(v96));if  not A[1] then local v109=v44[4][v92] or "?" ;error("Script error at ["   .. v109   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end end end return v43(v42(),{},v21)(...);end;vv10(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end end end
