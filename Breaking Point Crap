do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v66=v2(v0(v29,16));if v18 then local v75=v5(v66,v18);v18=nil;return v75;else return v66;end end end);local function v19(v30,v31,v32)if v32 then local v67=(v30/((2 + 0)^(v31-(1 -0))))%((6 -4)^(((v32-(1 + (0 -0))) -(v31-(442 -(206 + 235)))) + 1 + 0));return v67-(v67%(3 -2));else local v68=(1685 -(1129 + 556)) -(909 -(109 + 800));local v69;while true do if (v68==(1130 -(512 + 618))) then v69=(1 + 1)^(v31-(1 + 0));return (((v30%(v69 + v69))>=v69) and (1458 -((811 -(60 + 79)) + 785))) or (0 + 0);end end end end local function v20()local v37=(0 -0) -0;local v38;while true do if (v37==(1 + (0 -0))) then return v38;end if (v37==(0 + 0)) then v38=v1(v15,v17,v17);v17=v17 + (4 -3);v37=1 + 0;end end end local function v21()local v39,v40=v1(v15,v17,v17 + (3 -1));v17=v17 + 1 + 1;return (v40 * (1199 -(291 + 652))) + v39;end local function v22()local v41=0 + 0;local v42;local v43;local v44;local v45;while true do if (v41==1) then return (v45 * 16777216) + (v44 * (263097 -197561)) + (v43 * (676 -420)) + v42;end if ((0 + 0)==v41) then v42,v43,v44,v45=v1(v15,v17,v17 + 1 + 2);v17=v17 + 3 + 1;v41=3 -(1 + 1);end end end local function v23()local v46=1163 -(1040 + 123);local v47;local v48;while true do if (v46==0) then v47=v22();v48=v22();v46=1;end if (v46==(1 + 0)) then return (( -(3 -1) * v19(v48,167 -(5 + 130))) + ((925 + 988) -(1773 + 139))) * ((2 + 0)^(v19(v48,(51 -40) + 10,46 -15) -(1139 -(37 + 79)))) * ((((v19(v48,425 -(302 + 122),18 + 2) * ((5 -3)^32)) + v47)/(((20 -15) -3)^(45 + 7))) + (1 -(0 + 0)));end end end local function v24(v33)local v49;if  not v33 then v33=v22();if (v33==(22 -(12 + 10))) then return "";end end v49=v3(v15,v17,(v17 + v33) -1);v17=v17 + v33;local v50={};for v64=1 -0, #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v51==4) then v60=nil;while true do if (v52==2) then v57=nil;v58=nil;v52=3;end if (v52~=(881 -(720 + 160))) then else local v91=1597 -(1122 + 475);while true do if ((1335 -(216 + 1119))==v91) then v55=nil;v56=nil;v91=1;end if (v91==(1006 -(794 + 211))) then v52=2;break;end end end if (v52==0) then local v92=1474 -(1289 + 185);while true do if (v92==1) then v52=1;break;end if (v92==(0 -0)) then v53=0;v54=nil;v92=1;end end end if (v52==(3 + 0)) then v59=nil;v60=nil;v52=4;end if ((11 -7)==v52) then while true do if (v53~=1) then else local v95=0;while true do if (v95==1) then v53=2;break;end if (0==v95) then v56=nil;v57=nil;v95=1;end end end if (v53==(296 -(113 + 183))) then local v96=0;local v97;while true do if ((0 + 0)==v96) then v97=180 -(120 + 60);while true do if (v97~=1) then else v53=1;break;end if (v97~=(1917 -(653 + 1264))) then else local v102=1978 -(70 + 1908);while true do if (v102~=1) then else v97=601 -(592 + 8);break;end if (v102==(0 + 0)) then v54=0;v55=nil;v102=1 + 0;end end end end break;end end end if (v53==2) then local v98=0 -0;while true do if (v98~=(803 -(724 + 78))) then else v53=5 -2;break;end if (v98==(0 -0)) then v58=nil;v59=nil;v98=2 -1;end end end if (v53==(2 + 1)) then v60=nil;while true do local v99=0 -0;local v100;while true do if (0==v99) then v100=175 -(56 + 119);while true do if (v100~=1) then else if (v54~=0) then else local v104=0 -0;local v105;local v106;while true do if (v104~=(664 -(50 + 614))) then else v105=0;v106=nil;v104=1;end if (1~=v104) then else while true do if (v105~=0) then else v106=0;while true do if (v106~=0) then else local v216=0;while true do if (v216~=1) then else v106=3 -2;break;end if (v216~=0) then else v55={};v56={};v216=1;end end end if (v106==(1 + 0)) then v57={};v54=1;break;end end break;end end break;end end end if (v54~=(7 -5)) then else local v107=0;local v108;local v109;while true do if (v107==0) then v108=0;v109=nil;v107=1;end if (v107~=1) then else while true do if (v108==(300 -(61 + 239))) then v109=0 + 0;while true do if (1~=v109) then else for v231=4 -3,v22() do local v232=0;local v233;while true do if (v232==0) then v233=v20();if (v19(v233,1,1)==(0 -0)) then local v271=0;local v272;local v273;local v274;local v275;while true do if (v271==1) then local v298=0;while true do if (v298==(1655 -(1082 + 572))) then v271=2;break;end if (v298==(55 -(51 + 4))) then v274=nil;v275=nil;v298=1;end end end if (v271==(0 -0)) then local v299=0 -0;local v300;while true do if (v299==(0 + 0)) then v300=0 + 0;while true do if (v300==1) then v271=1;break;end if (v300==0) then v272=896 -(63 + 833);v273=nil;v300=1 + 0;end end break;end end end if (v271==(3 -1)) then while true do if (v272==(2 -1)) then local v318=0;local v319;while true do if (v318~=0) then else v319=0 + 0;while true do if (v319~=(1 + 0)) then else v272=1420 -(832 + 586);break;end if (v319~=0) then else local v336=0 + 0;local v337;while true do if (v336==(0 + 0)) then v337=84 -(39 + 45);while true do if (v337==0) then v275={v21(),v21(),nil,nil};if (v273==0) then local v345=0;local v346;local v347;while true do if (v345~=(0 + 0)) then else v346=0;v347=nil;v345=2 -1;end if (v345~=(4 -3)) then else while true do if (v346==(0 + 0)) then v347=0 -0;while true do if (v347==(1107 -(899 + 208))) then v275[1032 -(141 + 888)]=v21();v275[93 -(65 + 24)]=v21();break;end end break;end end break;end end elseif (v273==(1 + 0)) then v275[154 -(110 + 41)]=v22();elseif (v273==2) then v275[3]=v22() -(2^16);elseif (v273==(2 + 1)) then local v353=0;local v354;while true do if (v353==(1763 -(695 + 1068))) then v354=1480 -(1335 + 145);while true do if (v354==0) then v275[3]=v22() -(2^(432 -(127 + 289)));v275[1 + 3]=v21();break;end end break;end end end v337=1;end if ((1165 -(689 + 475))~=v337) then else v319=1;break;end end break;end end end end break;end end end if (v272==(2 + 0)) then local v320=0;while true do if ((607 -(551 + 55))==v320) then v272=3;break;end if (v320==(0 -0)) then local v334=0;local v335;while true do if (v334~=(0 + 0)) then else v335=0;while true do if (v335~=1) then else v320=2 -1;break;end if (0==v335) then local v338=0 + 0;while true do if (v338==(420 -(25 + 395))) then if (v19(v274,431 -(38 + 392),2 -1)~=(1 + 0)) then else v275[7 -5]=v60[v275[2]];end if (v19(v274,1568 -(837 + 729),1 + 1)==(1 + 0)) then v275[3]=v60[v275[2 + 1]];end v338=1;end if (v338~=(1361 -(842 + 518))) then else v335=952 -(672 + 279);break;end end end end break;end end end end end if (v272==0) then local v321=742 -(115 + 627);local v322;local v323;while true do if (v321==1) then while true do if (v322==(0 -0)) then v323=0 -0;while true do if (v323==(1 -0)) then v272=1;break;end if (v323==(0 -0)) then local v339=0;local v340;while true do if (v339==(0 + 0)) then v340=0;while true do if (v340~=1) then else v323=1;break;end if (v340==(0 + 0)) then local v350=0;while true do if (v350==(1578 -(1272 + 305))) then v340=1;break;end if (v350~=(123 -(112 + 11))) then else v273=v19(v233,2 + 0,1637 -(605 + 1029));v274=v19(v233,7 -3,6);v350=1;end end end end break;end end end end break;end end break;end if (v321==0) then v322=0;v323=nil;v321=1991 -(216 + 1774);end end end if (v272~=(1559 -(1483 + 73))) then else if (v19(v274,3,2 + 1)==1) then v275[4 + 0]=v60[v275[3 + 1]];end v55[v231]=v275;break;end end break;end end end break;end end end v54=3;break;end if (v109~=0) then else for v234=3 -2,v59 do local v235=0;local v236;local v237;local v238;local v239;local v240;while true do if (v235==(1110 -(707 + 402))) then v238=nil;v239=nil;v235=2;end if (v235==(0 -0)) then v236=0 + 0;v237=nil;v235=1;end if (v235~=2) then else v240=nil;while true do if (v236==(393 -(110 + 282))) then local v286=0;while true do if ((1 -0)~=v286) then else v236=2;break;end if (v286==0) then v239=nil;v240=nil;v286=1;end end end if (v236~=2) then else while true do if (v237==(1352 -(542 + 809))) then v240=nil;while true do if (v238~=(1053 -(208 + 845))) then else local v326=0;local v327;local v328;while true do if (v326==(1 + 0)) then while true do if (v327~=(0 -0)) then else v328=0;while true do if (v328==(0 -0)) then local v341=0;while true do if (v341==0) then local v344=0 -0;while true do if (v344==1) then v341=1 -0;break;end if (v344==0) then v239=v20();v240=nil;v344=1 + 0;end end end if ((2 -1)==v341) then v328=1395 -(1115 + 279);break;end end end if (v328~=(2 -1)) then else v238=1;break;end end break;end end break;end if (v326==(0 -0)) then v327=722 -(530 + 192);v328=nil;v326=1;end end end if (v238==(1 + 0)) then if (v239==(1 + 0)) then v240=v20()~=(0 + 0);elseif (v239==(2 + 0)) then v240=v23();elseif (v239==(141 -(18 + 120))) then v240=v24();end v60[v234]=v240;break;end end break;end if (v237==(0 + 0)) then local v305=0 -0;while true do if (v305~=(2 -1)) then else v237=899 -(703 + 195);break;end if (0==v305) then v238=1902 -(1528 + 374);v239=nil;v305=2 -1;end end end end break;end if (v236~=(543 -(203 + 340))) then else local v287=0;while true do if (v287~=1) then else v236=1;break;end if (v287==(0 + 0)) then v237=0;v238=nil;v287=1;end end end end break;end end end v58[3]=v20();v109=1;end end break;end end break;end end end break;end if (v100==0) then local v103=0;while true do if (v103~=1) then else v100=1;break;end if (v103==(0 -0)) then local v110=0;while true do if (v110==0) then if (v54==3) then local v204=1462 -(17 + 1445);local v205;while true do if ((0 -0)==v204) then v205=0;while true do if (v205~=(1 + 0)) then else return v58;end if (0==v205) then local v248=0 -0;local v249;while true do if (v248~=(881 -(124 + 757))) then else v249=0 -0;while true do if (v249==(1190 -(1078 + 112))) then for v306=1,v22() do v56[v306-(1 + 0)]=v27();end for v308=1,v22() do v57[v308]=v22();end v249=1;end if (v249==1) then v205=1 + 0;break;end end break;end end end end break;end end end if (v54==1) then local v206=0;local v207;local v208;while true do if (v206==1) then while true do if (v207~=(0 + 0)) then else v208=0;while true do if (v208==0) then local v276=155 -(152 + 3);while true do if (v276~=(1561 -(178 + 1383))) then else v58={v55,v56,nil,v57};v59=v22();v276=1194 -(321 + 872);end if (v276==(1 + 0)) then v208=1;break;end end end if (v208~=(1 + 0)) then else v60={};v54=2;break;end end break;end end break;end if (v206==(0 + 0)) then v207=0;v208=nil;v206=1;end end end v110=1;end if (v110==1) then v103=1;break;end end end end end end break;end end end break;end end break;end end break;end if (v51~=(0 + 0)) then else v52=1999 -(1722 + 277);v53=nil;v51=1;end if (v51==1) then v54=nil;v55=nil;v51=2;end if (v51==3) then v58=nil;v59=nil;v51=10 -6;end if (v51~=(580 -(7 + 571))) then else v56=nil;v57=nil;v51=1278 -(140 + 1135);end end end local function v28(v34,v35,v36)local v61=v34[1];local v62=v34[2];local v63=v34[3];return function(...)local v70=1;local v71= -1;local v72={...};local v73=v11("#",...) -1;local function v74()local v76=v61;local v77=v62;local v78=v63;local v79=v26;local v80={};local v81={};local v82={};for v88=0 + 0,v73 do if (((3500 -(631 + 1002 + 94))<(4466 -(1548 + 316))) and (v88>=v78)) then v80[v88-v78]=v72[v88 + 1 + 0];else v82[v88]=v72[v88 + ((1 + 1) -1)];end end local v83=(v73-v78) + 1;local v84;local v85;while true do local v89=0;local v90;while true do if (((4091 -(622 + 1124))==(1042 + 1303)) and (v89==(0 -0))) then v90=311 -(286 + 25);while true do if ((4013>=(59 + 69)) and ((1 + 0)==v90)) then if (((481 + 324)>=(637 -249)) and (v85<=(1485 -(313 + 1150)))) then if ((v85<=10) or ((1455 + 3328)<=(681 + 1725))) then if (((5138 -3493)<=2991) and (v85<=(556 -(391 + 161)))) then if (((3092 -1656)>(2754 -(939 + 1034))) and (v85<=(359 -(284 + 74)))) then if ((v85==0) or (((7433 -3654) -(485 + 248))>=3994)) then local v111=0 + 0 + 0;local v112;while true do if ((v111==(425 -(331 + 94))) or ((4977 -((1789 -(631 + 911)) + 466))==2663)) then v112=v82[v84[1 + 3]];if (((136 + 46)<3761) and  not v112) then InstrPoint=InstrPoint + (4 -3);else local v213=0 + 0 + 0;local v214;while true do if ((v213==0) or ((4836 -(1194 + 72))<((3281 -1434) -733))) then v214=745 -(377 + 368);while true do if ((v214==(0 + 0)) or ((2952 -(272 + 31 + 719))==((1677 -(1284 + 56)) + 907))) then v82[v84[1 + 1]]=v112;InstrPoint=v84[3 + 0];break;end end break;end end end break;end end else v82[v84[2 + 0]][v84[(1900 -(1499 + 391)) -7]]=v84[14 -10];end elseif (((1220 + 3425)>(1602 + 116)) and (v85<=(413 -(181 + 230)))) then local v114=0;local v115;local v116;local v117;while true do if (((1124 + 2001)==(221 + 2904)) and (v114==(2 -1))) then v117=nil;while true do if (((0 -0)==v115) or ((3953 -2208)>=(4902 -((2653 -1275) + 514)))) then local v218=0;while true do if (((482 -(144 + 338))==v218) or ((18 + 352)>(3575 -(22 + 38)))) then v116=v84[4 -2];v117={};v218=1522 -(1494 + 27);end if ((v218==(1 + 0)) or ((1611 -1175)==2079)) then v115=1 + 0;break;end end end if (((2908 -(85 + 355))<(1353 + 1884)) and (v115==(270 -(70 + 199)))) then for v241=1743 -(1497 + 245), #v81 do local v242=0 -0;local v243;local v244;while true do if ((v242==1) or (3630<=(2970 + 601))) then while true do if (((12943 -9522)>(1482 -(98 + 31))) and (v243==0)) then v244=v81[v241];for v293=0 -0, #v244 do local v294=0 -0;local v295;local v296;local v297;while true do if ((v294==(3 -2)) or ((7445 -4412)<(14 + 1))) then v297=v295[4 -2];if (((v296==v82) and (v297>=v116)) or (3677<2847)) then local v330=0 -(0 + 0);local v331;local v332;while true do if (((3801 -(1251 + 335))>(3132 -2078)) and (v330==1)) then while true do if ((v331==0) or ((2262 + 1630)>=(3797 + 798))) then v332=0;while true do if (((9032 -4839)==(8974 -(5935 -(154 + 1000)))) and (v332==0)) then v117[v297]=v296[v297];v295[1]=v117;break;end end break;end end break;end if ((2993>(2175 -(153 + 364))) and (v330==(0 -(1775 -(1577 + 198))))) then v331=0 + 0;v332=nil;v330=1574 -(1391 + 182);end end end break;end if ((v294==(0 + 0)) or (4561<=(448 -(4 + 42)))) then local v313=0;while true do if ((722<(3847 -2944)) and (v313==(1 + 0))) then v294=1;break;end if ((v313==(0 + 0)) or (2975<=(2402 -((1966 -(1773 + 96)) + 22)))) then v295=v244[v293];v296=v295[487 -((879 -(244 + 326)) + 177)];v313=1 + 0;end end end end end break;end end break;end if (((21 + (1621 -1151))>(812 -(304 + 227))) and (v242==(0 -0))) then v243=0 + 0 + 0;v244=nil;v242=425 -(254 + 170);end end end break;end end break;end if ((0==v114) or ((5150 -3150)>(2718 + 1063))) then v115=0;v116=nil;v114=1 -0;end end elseif ((v85>(694 -(254 + 437))) or (1537>(1891 -((495 -287) + 125)))) then local v142=(0 -0) + 0;local v143;local v144;local v145;local v146;while true do if (((6375 -3783)>(1119 + 953 + 288)) and (v142==(1 + 0))) then v71=(v145 + v143) -(2 -1);v146=883 -(310 + 573);v142=(5 + 1) -4;end if (((2041 + 1378)<=(6696 -3125)) and (0==v142)) then v143=v84[1101 -(461 + 638)];v144,v145=v79(v82[v143](v82[v143 + 1]));v142=1345 -(1014 + 330);end if ((v142==2) or ((1245 -658)>(2251 + 101 + 87))) then for v219=v143,v71 do local v220=0 -0;local v221;local v222;while true do if ((v220==(1 -0)) or ((4695 -(677 + 1143))<(3688 -2139))) then while true do if ((v221==(0 + 0)) or ((3064 -(437 + 580 + 33))>=(5580 -(738 + 694)))) then v222=0 + (909 -(79 + 830));while true do if (((25 + 607)<=(2226 -(314 + 154))) and (v222==(0 + 0))) then v146=v146 + 1 + 0;v82[v219]=v144[v146];break;end end break;end end break;end if (((3707 -(660 + 849))>=(1153 + 313)) and (v220==(0 -0))) then v221=0 + 0;v222=nil;v220=2 -1;end end end break;end end else local v147=0;local v148;while true do if ((v147==0) or (809==(886 + 2521))) then v148=v84[2 + 0];do return v12(v82,v148,v71);end break;end end end elseif ((v85<=((17 -13) + 3)) or (452>(3488 + 1358))) then if (((564 -(6 + 43))<=((5131 -1702) -(890 + 909))) and (v85<=(2 + 3))) then local v118=0 + 0;local v119;while true do if ((2041==(5349 -(5672 -2364))) and (v118==(0 + 0))) then v119=v84[2];do return v82[v119](v12(v82,v119 + 1,v84[2 + 1]));end break;end end elseif ((v85>(4 + (2 -0))) or ((298 + 1430)>(3557 -(19 + 38)))) then v82[v84[2]]=v82[v84[824 -(314 + 507)]][v84[13 -9]];else v82[v84[2]]=v35[v84[2 + 1]];end elseif (((4223 -(1346 + 539))<(16434 -12723)) and (v85<=(4 + 4))) then if (((3490 -(123 + 342))>1373) and (v84[2 -0]<v82[v84[2 + 2]])) then v70=v70 + 1;else v70=v84[6 -3];end elseif ((v85==(1151 -(1104 + 38))) or (((12156 -8714) + 344)<(4052 -2915))) then local v151=0 + 0;local v152;while true do if ((v151==(0 -0)) or (447>(5498 -(149 + 522)))) then v152=v84[2 -0];v82[v152](v82[v152 + (494 -(233 + 260))]);break;end end else local v153=0;local v154;local v155;local v156;local v157;local v158;while true do if ((v153==0) or ((5631 -(211 + 846 + 454))==(5639 -3678))) then v154=0;v155=nil;v153=1 -0;end if (((1793 + 1680)>=(3194 -(159 + (1330 -(908 + 124))))) and (v153==((2 + 3) -3))) then v158=nil;while true do if (((2995 -(1465 + 227))<(2893 -(230 + 261))) and (v154==((2615 -1604) -((27 -21) + 1004)))) then v71=(v157 + v155) -(1 + 0 + 0);v158=0 -0;v154=5 -3;end if (((3920 -(31 + 1022))>=(863 + 333)) and (v154==(1269 -(190 + 1079)))) then v155=v84[2];v156,v157=v79(v82[v155](v12(v82,v155 + (1 -0),v71)));v154=1;end if ((v154==(2 + (0 -0))) or (((886 + 1851) -(86 + 1570))>=(5031 -3860))) then for v250=v155,v71 do local v251=0;while true do if ((v251==(1649 -(1369 + (913 -(162 + 471))))) or (881>=(5048 -(1870 + 121)))) then v158=v158 + 1 + 0;v82[v250]=v156[v158];break;end end end break;end end break;end if ((v153==(1 + 0)) or ((9627 -4948)<=(4472 -((766 -(24 + 359)) + 250)))) then v156=nil;v157=nil;v153=2;end end end elseif (((1824 -(274 + 232))<=(2262 + 95)) and (v85<=(73 -57))) then if (((2984 + 1941)==(4493 + 255 + 177)) and (v85<=(1896 -(156 + 1727)))) then if ((2941<=(5517 -(3365 -(1164 + 45)))) and (v85<=(10 + 1))) then v82[v84[2]][v84[3]]=v82[v84[640 -(349 + 287)]];elseif ((v85==(24 -12)) or ((2622 + (5060 -2919))<1612)) then local v159=0 -0;local v160;local v161;while true do if (((2337 -(1331 + (1519 -(562 + 521))))==(1135 -(225 + 340))) and (v159==(0 -0))) then v160=(1272 -(330 + 942)) + 0 + 0;v161=nil;v159=1461 -(1274 + 186);end if ((v159==(1787 -(1046 + 740))) or (3000<904)) then while true do if (((5021 -2790)<=4775) and (v160==(0 -0))) then v161=v84[2];v82[v161](v12(v82,v161 + 1,v71));break;end end break;end end else v82[v84[1 + 1 + 0]]=v82[v84[1 + 2]]%v82[v84[2 + 2]];end elseif (((405 + 1012)>=(1394 -(31 + (739 -290)))) and (v85<=(1181 -((2424 -1585) + 328)))) then v82[v84[2 -0]]=v84[2 + 1] + v82[v84[1754 -(1424 + 326)]];elseif ((v85==(8 + (18 -11))) or (2795<=(1175 + 466))) then v82[v84[1 + 1]]=v82[v84[6 -3]] * v82[v84[1527 -(966 + 557)]];else local v164=0 + 0;local v165;local v166;local v167;while true do if ((v164==(0 -0)) or ((11491 -7698)==(7649 -5406))) then v165=1670 -(1598 + 72);v166=nil;v164=1 + 0;end if ((405<(8382 -5425)) and (v164==1)) then v167=nil;while true do if ((v165==((2 + 0) -1)) or ((436 + 270)>=(1014 + 109))) then while true do if ((v166==((972 -(286 + 686)) + 0)) or ((3005 + 1599)<=(5579 -(835 + (1946 -1513))))) then v167=v84[2];v82[v167]=v82[v167]();break;end end break;end if (((1084 + 781)>=(224 + 1630)) and (v165==0)) then v166=0 + 0;v167=nil;v165=1 + 0;end end break;end end end elseif ((v85<=19) or (1332==(12955 -9612))) then if ((3004==(647 + 2357)) and (v85<=(35 -(1307 -(354 + 935))))) then if ((((3655 -(281 + 23)) -(365 + (1421 -947)))==(1335 + 1177)) and (v84[2 -(0 + 0)]==v82[v84[1880 -(1770 + 106)]])) then v70=v70 + 1 + 0 + 0;else v70=v84[672 -(377 + 292)];end elseif ((1081==((2755 -(1278 + 180)) -(48 + 0 + 168))) and (v85==(86 -68))) then local v168=0 -0;local v169;local v170;while true do if (((0 + 0)==v168) or (3806>=(615 + 3355))) then v169=0 -0;v170=nil;v168=1 + 0;end if (((4187 -(437 + 516))<=((29893 -12768) -13311)) and (v168==((1 + 0) -0))) then while true do if (((128 + 72)<=((4448 -(559 + 137)) + 317)) and ((0 + 0)==v169)) then v170=v84[62 -(34 + 11 + 15)];v82[v170](v12(v82,v170 + 1,v84[2 + 1]));break;end end break;end end else local v171=566 -(475 + 91);local v172;local v173;local v174;local v175;while true do if ((v171==(1492 -(830 + 660))) or (4112<((15355 -(361 + 182)) -10890))) then while true do if ((v172==(0 + 0)) or ((6120 -4046)==((717 + 1937) -1858))) then v173=v77[v84[1 + 2]];v174=nil;v172=1 -0;end if ((v172==((305 -(79 + 224)) -0)) or ((92 + 114)==2972)) then for v252=(2 -1) + 0,v84[1 + 1 + 2] do local v253=0;local v254;local v255;while true do if ((v253==((848 + 341) -(88 + 1100))) or ((4580 -(724 + 736))<=(3629 -(115 + 480 + 326)))) then while true do if ((v254==(1519 -(822 + 696))) or ((3748 -(162 + 14))>(10245 -6252))) then if (((1634 + 873)>=(5622 -4198)) and (v255[1880 -(1453 + 426)]==(214 -(367 -196)))) then v175[v252-((1 -0) + 0)]={v82,v255[3 + 0]};else v175[v252-(212 -(39 + 172))]={v35,v255[3]};end v81[ #v81 + 1 + (0 -0)]=v175;break;end if ((v254==(0 -0)) or ((5114 -((71 -43) + 1721 + 190))>(4908 -(47 + 22)))) then local v303=0;while true do if ((0==v303) or ((110 + 144)>880)) then v70=v70 + (3 -2);v255=v76[v70];v303=1 -0;end if ((v303==(1 + 0)) or ((1017 + 348)==4200)) then v254=603 -(330 + 272);break;end end end end break;end if ((v253==(1967 -(1253 + 714))) or ((5203 -(618 + 1100))<=(653 + 287))) then v254=0 -0;v255=nil;v253=1 -(0 -0);end end end v82[v84[(1 + 5) -4]]=v28(v173,v174,v36);break;end if (((3335 -((1929 -(1012 + 484)) + 839))<=2886) and (v172==1)) then local v246=0 + 0;while true do if ((v246==(1 -0)) or ((8186 -5405)<(1338 -(153 + 331)))) then v172=(2 + 1) -1;break;end if ((v246==(281 -(140 + 141))) or (((4672 -(555 + 1357)) -(436 + 1294))>(4008 -(151 + 267)))) then v175={};v174=v9({},{__index=function(v278,v279)local v288=0 -0;local v289;while true do if (((4753 -(282 + 280))==(184 + 4007)) and (v288==0)) then local v310=(312 + 1684) -(1435 + 561);while true do if ((v310==(0 + 0)) or (2244>=(5761 -(601 + 1167)))) then v289=v175[v279];return v289[(5 -3) -1][v289[2]];end end end end end,__newindex=function(v280,v281,v282)local v290=0 -0;local v291;while true do if ((v290==(0 + (0 -0))) or ((1097 -(121 + 195))==(4941 -(1808 + (1621 -(257 + 1180)))))) then v291=v175[v281];v291[1172 -(13 + 442 + 716)][v291[9 -7]]=v282;break;end end end});v246=1 + 0 + 0;end end end end break;end if (((219 + 715)==(738 + 196)) and (v171==(1781 -(213 + 1568)))) then v172=0 -0;v173=nil;v171=(2 + 1) -2;end if ((v171==(1 -0)) or (3953<=(2911 -((1489 -(160 + 1223)) + 1601)))) then v174=nil;v175=nil;v171=8 -(1947 -(618 + 1323));end end end elseif ((v85<=((5314 -3362) -(1350 + 582))) or ((3091 -2163)>=((3317 -2588) + 509))) then local v122=0;local v123;local v124;local v125;local v126;while true do if ((3853>((1495 -(1030 + 339)) + 6)) and (v122==(1 + 0))) then local v209=(352 + 1404) -(983 + 773);while true do if ((v209==(0 -0)) or ((2107 -(389 + 612))<=(601 + 14))) then v125=nil;v126=nil;v209=3 -2;end if (((4959 -3255)<=(3715 -1481)) and (v209==(2 -1))) then v122=63 -(57 + (4 -0));break;end end end if ((v122==(3 -1)) or (4783<1828)) then while true do if ((v123==2) or (464>=(11216 -6360))) then if (((3550 -2525)==(2157 -1132)) and (v125>(0 -0))) then if ((((1101 -272) + 291)>(601 + 32)) and (v126<=v82[v124 + 1 + 0])) then local v262=0 + 0;local v263;while true do if ((v262==(0 -0)) or ((1994 -1088)>=(6599 -(698 + 1169)))) then v263=0;while true do if ((v263==(1679 -(1483 + 196))) or ((3150 + 793)<(3766 -(1771 + 120)))) then v70=v84[4 -1];v82[v124 + (1113 -(872 + (1915 -(58 + 1619))))]=v126;break;end end break;end end end elseif ((v126>=v82[v124 + 1 + 0]) or ((4796 -(409 + (1426 -568)))==4847)) then local v264=0 + 0;while true do if ((v264==(0 -0)) or ((3160 -1850)>(2430 -(138 + 148)))) then v70=v84[901 -(375 + 523)];v82[v124 + 3]=v126;break;end end end break;end if (((7399 -5487)<2488) and (v123==0)) then local v223=1411 -(782 + 629);local v224;while true do if ((v223==(0 + 0)) or ((9321 -6695)>(861 + 2816))) then v224=0 + 0;while true do if ((v224==1) or ((1127 -(68 + 75))<((720 -519) + 78))) then v123=1176 -(1117 + 58);break;end if (((304 + (924 -(112 + 133)))<=(6558 -4340)) and (v224==0)) then v124=v84[1955 -(1523 + 430)];v125=v82[v124 + (2 -0)];v224=1;end end break;end end end if (((4793 -3061)==(2728 -(970 + 26))) and ((4 -3)==v123)) then local v225=0;while true do if (((7341 -4164)>=(5325 -3537)) and (1==v225)) then v123=(337 -(189 + 146)) -0;break;end if (((0 + 0)==v225) or ((3565 + 93)<=(87 + 661))) then v126=v82[v124] + v125;v82[v124]=v126;v225=1 + 0;end end end end break;end if ((v122==(1020 -(446 + 574))) or (2294<=(224 -127))) then local v210=1076 -(206 + 870);while true do if ((v210==(1 + 0)) or ((436 + 2190)<=(2890 -(216 + (1157 -675))))) then v122=1 + 0;break;end if ((v210==(0 + 0)) or (((819 + 1296) -((237 -(162 + 56)) + 284))>=(1441 + 3186))) then v123=0;v124=nil;v210=(867 -(323 + 543)) + (1900 -(1690 + 210));end end end end elseif ((v85>21) or ((9520 -4720)<=(3813 -(95 + 675)))) then v82[v84[7 -5]]=v28(v77[v84[(193 -(116 + 75)) + 1]],nil,v36);else do return;end end elseif ((336<=(3589 + 818)) and (v85<=(1 + 32))) then if (((468 -(126 + 265))<=(5157 -(435 + 1374))) and (v85<=(49 -22))) then if (((2870 -(396 + 347))==(2987 -(707 + 153))) and (v85<=(48 -24))) then if ((((6225 -3009) -(675 + 1114))==(1789 -(56 + 306))) and (v85>(9 + 14))) then local v127=0 + (0 -0);local v128;local v129;local v130;while true do if (((103 + 33)<(7169 -(2188 + 2349))) and (v127==(2 -1))) then v130=nil;while true do if (((1634 -(1586 + 48))==v128) or ((11585 -6735)<=(3787 -(245 + 380)))) then local v226=0;while true do if (((1944 + (6422 -4193))>=(3969 -1945)) and (v226==((2 + 0) -(1609 -(187 + 1421))))) then v128=1 + 0;break;end if ((v226==0) or ((9989 -5537)==1826)) then v129=v84[2];v130=v82[v84[1749 -(1040 + 706)]];v226=1;end end end if (((4195 -(56 + 1493))<=(7749 -3598)) and (v128==(1707 -(399 + 973 + 334)))) then v82[v129 + (1535 -(792 + 742))]=v130;v82[v129]=v130[v84[4]];break;end end break;end if ((v127==((7492 -5982) -(608 + 902))) or (((2898 -1497) + 540)==(1749 + 1419))) then v128=(0 -0) -0;v129=nil;v127=1 + 0;end end elseif ((((4659 -(302 + 508)) -(55 + 255))>(4007 -(877 + (1597 -(947 + 328))))) and v82[v84[2]]) then v70=v70 + 1 + 0;else v70=v84[3];end elseif ((v85<=(9 + 16)) or (3172>(2490 + (2589 -903)))) then v82[v84[2]][v82[v84[3 + 0]]]=v82[v84[7 -3]];elseif ((v85==(116 -90)) or ((4060 -((1443 -(1145 + 143)) + (1165 -(258 + 748))))<=(1655 -(216 + 553)))) then v82[v84[6 -(10 -6)]]= #v82[v84[1 + 2]];else v82[v84[2 + 0]]=v82[v84[2 + 1]]%v84[1 + 3];end elseif ((v85<=(14 + 16)) or ((7880 -(20234 -15115))==(614 + 844))) then if (((186 + 422)==(392 + 216)) and (v85<=(1497 -(1048 + 421)))) then local v132=0 -0;local v133;local v134;while true do if ((v132==(1876 -((3111 -2186) + (1882 -(461 + 470))))) or ((1914 + 1621)>=3874)) then local v211=754 -(630 + 124);while true do if ((v211==(0 + 0)) or (((11151 -(259 + 318)) -6915)==(791 + 1248))) then v133=0 -0;v134=nil;v211=1;end if ((136==(56 + 80)) and (v211==(2 -1))) then v132=1;break;end end end if (((3867 + 737)>(2152 + 2125)) and (v132==(1196 -(801 + 394)))) then while true do if ((v133==(873 -(620 + 253))) or ((1553 -(51 + 273))>=(2297 -(190 + 831)))) then v134=v84[(1422 -861) -(202 + 22 + 335)];v82[v134]=v82[v134](v12(v82,v134 + 1 + 0,v84[1 + 2]));break;end end break;end end elseif ((v85>29) or ((11641 -6648)<((454 + 4146) -3206))) then if ((v82[v84[985 -(536 + 447)]]==v84[622 -(583 + 7 + 28)]) or ((11378 -7116)==(2775 -(5 + 1360)))) then v70=v70 + 1;else v70=v84[7 -4];end else v82[v84[2]]=v36[v84[4 -1]];end elseif (((6394 -2669)>(2650 -(215 + 1111))) and (v85<=(11 + 20))) then v82[v84[2]]=v82[v84[2 + 1]] -v84[4];elseif ((((21449 -13014) -5922)>=((3733 -(66 + 467)) -1018)) and (v85>32)) then v36[v84[9 -6]]=v82[v84[1243 -(775 + 466)]];else v70=v84[3 + 0];end elseif (((707 -262)<3959) and (v85<=((434 -(189 + 207)) + 1))) then if ((v85<=36) or ((3579 -(92 + 490))<=(8658 -6870))) then if (((299 + 4301)>(6423 -5108)) and (v85<=(1304 -(438 + 832)))) then v82[v84[(9 -3) -4]]=v84[2 + 1]~=(0 + 0);elseif ((((1081 + 3428) -(204 + 180))>=(857 + 1787)) and (v85>(1072 -(970 + 67)))) then v82[v84[3 -(1163 -(240 + 922))]]=v84[3];else local v182=0 + 0;local v183;local v184;local v185;local v186;local v187;while true do if ((v182==(1 -0)) or ((3117 + 292)>=((4496 -3457) + 3231))) then v185=nil;v186=nil;v182=369 -(169 + 198);end if ((v182==0) or (1507<=(720 + 703))) then v183=0;v184=nil;v182=1 + 0;end if (((3196 + 778)==(4653 -(257 + 353 + 69))) and (v182==2)) then v187=nil;while true do if ((v183==(1470 -(453 + 1015))) or ((847 + 238)>=(2153 + 102))) then for v257=v184,v71 do local v258=639 -(121 + 518);local v259;while true do if ((475>(823 -543)) and (v258==(1719 -(730 + 989)))) then v259=(0 -0) + 0;while true do if ((v259==(0 -0)) or ((1728 -1282)>2561)) then v187=v187 + (1 -0);v82[v257]=v185[v187];break;end end break;end end end break;end if (((101 + 3813)>=(5231 -2699)) and (v183==(1 -0))) then v71=(v186 + v184) -(142 -(47 + 94));v187=(231 + 622) -((1025 -490) + 318);v183=2 + 0;end if (((315 + 923)==(355 + (2797 -(1607 + 307)))) and (v183==(0 + 0))) then v184=v84[2];v185,v186=v79(v82[v184](v12(v82,v184 + (173 -(28 + 144)),v84[12 -9])));v183=1;end end break;end end end elseif (((9675 -5058)>(2829 -(305 + 951))) and (v85<=37)) then for v140=v84[2 -0],v84[3] do v82[v140]=nil;end elseif ((v85==((1296 -(705 + 563)) + 10)) or ((9651 -4889)<(1928 + 69))) then v82[v84[2]]();else local v188=931 -(31 + 900);local v189;local v190;local v191;while true do if ((v188==(1 -0)) or ((7399 -2400)<(7517 -5450))) then v191=v82[v189 + (7 -5)];if ((v191>(0 -0)) or ((194 + 3864)<=1250)) then if (((2235 -1068)<(8786 -5778)) and (v190>v82[v189 + 1 + 0])) then v70=v84[3];else v82[v189 + (5 -2)]=v190;end elseif (((21 + 9)<(3579 -2199)) and (v190<v82[v189 + (2 -1)])) then v70=v84[3 + (0 -0)];else v82[v189 + 1 + 2]=v190;end break;end if ((v188==(0 -0)) or (1920>(5230 -2916))) then v189=v84[2 + 0];v190=v82[v189];v188=1 -0;end end end elseif ((v85<=(10 + 32)) or ((105 + 729)>1104)) then if ((v85<=(5 + 35)) or ((4800 -(1036 + 166))<(3582 -(198 + 249)))) then local v137=0 -0;local v138;while true do if ((v137==0) or ((1980 -386)>(2332 -(46 + 326)))) then v138=v84[1 + (3 -2)];v82[v138]=v82[v138](v12(v82,v138 + (1 -0),v71));break;end end elseif ((629>=(715 -(128 + 177))) and (v85>41)) then v82[v84[2 + 0]]={};else local v193=0 -0;local v194;local v195;local v196;local v197;local v198;local v199;while true do if (((2767 -(537 + 723))<(11082 -6763)) and (v193==3)) then while true do if ((v194==((0 + 0) -0)) or (((4124 -(816 + 1076)) -(86 + 635))>=4287)) then local v247=0;while true do if (((1 -0)==v247) or ((3361 -(80 + 1))>(1620 + 2885))) then v194=1;break;end if ((v247==(1209 -(761 + 448))) or (((14954 -(921 + 640)) -9845)<(6694 -3178))) then v195=0 -0;v196=nil;v247=1340 -(1220 + 119);end end end if ((v194==(2 -1)) or ((1587 -(56 + 48))<(1978 -(415 + 1358)))) then v197=nil;v198=nil;v194=2;end if (((6913 -(3360 + 975))>1315) and (v194==2)) then v199=nil;while true do if (((5329 -1322)>((3437 -2717) -(489 + 46))) and (v195==(0 -0))) then local v267=0 + 0;local v268;while true do if (((9948 -6130)>=(905 -467)) and (v267==(1866 -(1692 + 174)))) then v268=0 -0;while true do if (((5371 -(518 + 257 + 1159))==(2601 + 836)) and (v268==(1445 -((976 -360) + 828)))) then v195=(1 + 0) -0;break;end if (((608 + 1908)==(1562 + 954)) and (v268==((2487 -1228) -(559 + 700)))) then local v316=0 + 0;while true do if (((255 + 790)<3481) and (v316==(1 + 0 + 0))) then v268=4 -3;break;end if ((v316==0) or ((7895 -5989)<(936 + 402))) then v196=v84[1433 -(10 + 1421)];v197,v198=v79(v82[v196]());v316=1 + 0;end end end end break;end end end if (((1 -0)==v195) or (4419>=(6216 -(211 + 1146)))) then local v269=550 -(14 + 536);local v270;while true do if ((((6126 -1757) -1627)>=1207) and (v269==(0 + 0))) then v270=1633 -(456 + 1177);while true do if (((6199 -3880)>(6270 -4368)) and (v270==((136 -(56 + 79)) -0))) then v195=845 -(433 + 410);break;end if (((4585 -(143 + 543 + 1301))==2598) and (v270==(227 -(6 + 221)))) then local v317=0 -0;while true do if ((v317==0) or ((2207 + 218)<=(464 + 649))) then v71=(v198 + v196) -(1 + (0 -0));v199=1435 -(1039 + 396);v317=517 -(149 + 367);end if ((v317==(3 -2)) or ((881 + 2327)<(1451 -(103 + 70)))) then v270=847 -(605 + 241);break;end end end end break;end end end if (((4 + 105)<(211 + 3539)) and (2==v195)) then for v283=v196,v71 do local v284=(528 -(136 + 392)) -0;local v285;while true do if ((v284==0) or ((54 + (1837 -(385 + 591)))==4007)) then v285=0 + 0;while true do if (((2528 -(230 + 41))==(5209 -2952)) and (v285==(0 -0))) then v199=v199 + (3 -2);v82[v283]=v197[v199];break;end end break;end end end break;end end break;end end break;end if (((738 + 3600)>(2215 -(207 + 170))) and ((0 + 0 + 0)==v193)) then v194=0;v195=nil;v193=1272 -(355 + 916);end if (((23355 -18510)>=((325 -80) + (2005 -(772 + 453)))) and (v193==1)) then v196=nil;v197=nil;v193=2;end if ((v193==(1061 -(224 + 835))) or ((367 + 2297)<(3213 -(260 + 1653)))) then v198=nil;v199=nil;v193=680 -(204 + 207 + 266);end end end elseif ((2695>=957) and (v85<=43)) then v82[v84[(13 -5) -6]]=v82[v84[3 + 0]];elseif ((v85>(116 -72)) or (((4100 -(62 + 674)) -(79 + 844 + 219))<=(3081 -2232))) then v82[v84[8 -(743 -(728 + 9))]]=v82[v84[6 -3]] + v84[4 + (0 -0)];else local v201=0;local v202;local v203;while true do if (((11227 -8439)<=(13586 -10028)) and (v201==(1039 -(668 + 370)))) then for v230=v202 + (1 -0),v84[508 -(350 + 154)] do v203=v203   .. v82[v230];end v82[v84[5 -3]]=v203;break;end if ((v201==((0 + 0) -0)) or ((2401 -(197 + (2662 -1574)))>(3788 -(359 + 468)))) then v202=v84[(1128 -(228 + 898)) + 1];v203=v82[v202];v201=1528 -(1210 + 317);end end end v70=v70 + 1;break;end if ((v90==(0 -0)) or ((525 + 2861)<(2159 -801))) then local v101=1037 -((2345 -(245 + 1159)) + 96);while true do if ((((246 + 2928) -((179 -(34 + 4)) + 253))>(10713 -(9421 -(670 + 696)))) and (v101==(3 -(9 -7)))) then v90=2 -1;break;end if (((4420 -(78 + 358))>=(156 + 110)) and (v101==(0 + 0))) then v84=v76[v70];v85=v84[1 + 0];v101=883 -((523 -338) + 697);end end end end break;end end end end A,B=v26(v10(v74));if  not A[1] then local v86=0;local v87;while true do if (0==v86) then v87=v34[4][v70] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end return v28(v27(),{},v16)(...);end vv8(),...);end
